site_name: 云原生系列学习
site_url: https://mkbooks.github.io/k8s-mengfanjie/

theme:
  name: material
  # icon:
  #   logo: Kubernetes-Logo.wine.png

# Page tree
nav:
  - Go 语言基础:
    - 高可用微服务架构方法论: 1/1.md
    - Go 语言特性:
      - 为什么需要新的语言: 1/2/1.md
      - Go 语言环境搭建: 1/2/2.md
      - 控制结构: 1/2/3.md
      - Go 语言常用数据结构: 1/2/4.md
      - Go 语言函数调用: 1/2/5.md
      - 常用语法: 1/2/6.md
      - 多线程: 
        - 基础: 1/2/7.md
        - 深入理解 channel: 1/2/8.md
        - 基于 channel 编写一个生产者消费者程序: 1/2/9.md
    - Go 语言进阶:
      - 线程加锁: 1/3/1.md
      - 线程调度: 1/3/2.md
      - 内存管理: 1/3/3.md
      - 包引用与依赖管理: 1/3/4.md
      - Makefile: 1/3/5.md
      - 动手编写一个 HTTP Server: 1/3/6.md
      - 调试: 1/3/7.md
      - Kubernetes 中常用代码解读: 1/3/8.md
      - Kubernetes 日常运维中的代码调试场景: 1/3/9.md
  - 云原生技术栈:
    - Docker 核心技术: 
      - 从系统架构谈起: 2/1/1.md
      - 理解 Docker: 2/1/2.md
      - Dockerfile 的最佳实践: 2/1/3.md
    - Kubernetes 架构原则和对象设计: 
      - 云计算: 2/2/1.md
      - Kubernetes 架构基础: 2/2/2.md
      - 了解 kubectl: 2/2/3.md
      - 深入理解 Kubernetes: 2/2/4.md
      - 核心对象概览: 2/2/5.md
      - 练习: 2/2/6.md
  - Kubernetes 控制平面组件:  
    - etcd:
      - etcd: 3/1.md
      - Raft协议: 3/2.md
      - 高可用集群管理: 3/3.md
      - etcd常见问题: 3/4.md
      - 练习: 
        - etcd-ha-demo: 3/test/etcd-ha-demo/install-ha-etcd.md
        - test: 3/test/test.md
    - API Server:
      - overview: 4.kube-api-server/0.overview.md
      - 认证: 4.kube-api-server/1.认证.md
      - 鉴权: 4.kube-api-server/2.鉴权.md
      - 准入: 4.kube-api-server/3.准入.md
      - 限流: 4.kube-api-server/4.限流.md
      - 高可用APIServer: 4.kube-api-server/5.高可用APIServer.md
    # - 调度器和控制器:
    # - 生命周期管理和服务发现:
  #   - 生产化集群的管理: 2/1.md
  #   - Kubernetes 的生产化运维: 2/1.md
  #   - 将应用迁移到 Kubernetes 平台: 2/1.md
  #   - 基于 Istio 的高级流量管理: 2/1.md
  #   - Kubernetes 集群联邦和 Istio 多集群管理: 2/1.md
  #   - 基于 Kubernetes 和 Istio 的安全保证: 2/1.md
  # - 云原生项目实战:
  #   - 微服务项目的开发和部署案例: 3/1.md